{"version":3,"sources":["index.js"],"names":["Translator","require","ee","cuid","throttle","prettierBytes","match","DefaultStore","getFileType","getFileNameAndExtension","generateFileID","findIndex","supportsUploadProgress","justErrorsLogger","debugLogger","Plugin","RestrictionError","args","isRestriction","Error","Uppy","opts","defaultLocale","strings","addBulkFilesFailed","youCanOnlyUploadX","youHaveToAtLeastSelectX","exceedsSize2","exceedsSize","inferiorSize","youCanOnlyUploadFileTypes","noNewAlreadyUploading","noDuplicates","companionError","companionUnauthorizeHint","failedToUpload","noInternetConnection","connectedToInternet","noFilesFound","selectX","selectAllFilesFromFolderNamed","unselectAllFilesFromFolderNamed","selectFileNamed","unselectFileNamed","openFolderNamed","cancel","logOut","filter","resetFilter","loading","authenticateWithTitle","authenticateWith","searchImages","enterTextToSearch","backToSearch","emptyFolderAdded","folderAdded","defaultOptions","id","autoProceed","allowMultipleUploads","debug","restrictions","maxFileSize","minFileSize","maxTotalFileSize","maxNumberOfFiles","minNumberOfFiles","allowedFileTypes","meta","onBeforeFileAdded","currentFile","files","onBeforeUpload","store","logger","infoTimeout","log","constructor","VERSION","Array","isArray","TypeError","i18nInit","plugins","getState","bind","getPlugin","setFileMeta","setFileState","info","hideInfo","addFile","removeFile","pauseResume","validateRestrictions","_calculateProgress","leading","trailing","updateOnlineStatus","resetProgress","pauseAll","resumeAll","retryAll","cancelAll","retryUpload","upload","emitter","on","off","once","emit","preProcessors","uploaders","postProcessors","setState","currentUploads","allowNewUpload","capabilities","uploadProgress","individualCancellation","resumableUploads","totalProgress","isHidden","type","message","recoveredState","_storeUnsubscribe","subscribe","prevState","nextState","patch","updateAll","window","_addListeners","event","callback","state","iteratePlugins","plugin","update","fileID","translator","locale","i18n","translate","i18nArray","translateArray","setOptions","newOpts","setMeta","defaultProgress","percentage","bytesUploaded","uploadComplete","uploadStarted","updatedFiles","Object","keys","forEach","updatedFile","progress","addPreProcessor","fn","push","removePreProcessor","i","indexOf","splice","addPostProcessor","removePostProcessor","addUploader","removeUploader","data","updatedMeta","newMeta","getFile","getFiles","map","file","_checkRestrictions","result","err","reason","length","smart_count","isCorrectFileType","some","replace","extension","toLowerCase","substr","allowedFileTypesString","join","types","size","totalFilesSize","backwardsCompat","_checkMinNumberOfFiles","_showOrLogErrorAndThrow","showInformer","throwErr","details","logMessageWithDetails","_assertNewUploadAllowed","_checkAndCreateFileStateObject","fileType","onBeforeFileAddedResult","fileName","name","split","fileExtension","isRemote","isGhost","isFinite","newFile","source","bytesTotal","remote","preview","filesArray","_startIfAutoProceed","scheduledAutoProceed","setTimeout","catch","stack","addFiles","fileDescriptors","newFiles","errors","subError","AggregateError","removeFiles","fileIDs","updatedUploads","removedFiles","create","fileIsNotRemoved","uploadFileID","undefined","uploadID","newFileIDs","stateUpdate","error","_calculateTotalProgress","removedFileIDs","wasPaused","isPaused","inProgressUpdatedFiles","filesToRetry","Promise","resolve","successful","failed","_createUpload","forceAllowNewUpload","_runUpload","reset","logout","provider","canHavePercentage","Math","round","inProgress","preprocess","postprocess","sizedFiles","unsizedFiles","progressMax","currentProgress","reduce","acc","totalSize","averageSize","uploadedSize","errorMsg","response","newError","Date","now","uploadResp","mode","uploadURL","addEventListener","online","navigator","onLine","wasOffline","getID","use","msg","pluginId","existsPluginAlready","install","foundPlugin","method","pluginType","removePlugin","instance","uninstall","list","slice","index","item","updatedState","close","duration","isComplexMessage","clearTimeout","infoTimeoutID","newInfo","warn","run","restore","_removeUpload","reject","step","_getUpload","addResultData","currentUpload","uploadData","restoreStep","steps","lastStep","then","updatedUpload","uploader","onBeforeUploadResult","currentlyUploadingFiles","prev","curr","concat","waitingFileIDs","module","exports"],"mappings":"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","sourcesContent":["/* global AggregateError */\nconst Translator = require('@uppy/utils/lib/Translator')\nconst ee = require('namespace-emitter')\nconst cuid = require('cuid')\nconst throttle = require('lodash.throttle')\nconst prettierBytes = require('@transloadit/prettier-bytes')\nconst match = require('mime-match')\nconst DefaultStore = require('@uppy/store-default')\nconst getFileType = require('@uppy/utils/lib/getFileType')\nconst getFileNameAndExtension = require('@uppy/utils/lib/getFileNameAndExtension')\nconst generateFileID = require('@uppy/utils/lib/generateFileID')\nconst findIndex = require('@uppy/utils/lib/findIndex')\nconst supportsUploadProgress = require('./supportsUploadProgress')\nconst { justErrorsLogger, debugLogger } = require('./loggers')\nconst Plugin = require('./Plugin')\n// Exported from here.\nclass RestrictionError extends Error {\n  constructor (...args) {\n    super(...args)\n    this.isRestriction = true\n  }\n}\n\n/**\n * Uppy Core module.\n * Manages plugins, state updates, acts as an event bus,\n * adds/removes files and metadata.\n */\nclass Uppy {\n  static VERSION = require('../package.json').version\n\n  /**\n   * Instantiate Uppy\n   *\n   * @param {object} opts — Uppy options\n   */\n  constructor (opts) {\n    this.defaultLocale = {\n      strings: {\n        addBulkFilesFailed: {\n          0: 'Failed to add %{smart_count} file due to an internal error',\n          1: 'Failed to add %{smart_count} files due to internal errors',\n        },\n        youCanOnlyUploadX: {\n          0: 'You can only upload %{smart_count} file',\n          1: 'You can only upload %{smart_count} files',\n        },\n        youHaveToAtLeastSelectX: {\n          0: 'You have to select at least %{smart_count} file',\n          1: 'You have to select at least %{smart_count} files',\n        },\n        // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.\n        // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with\n        // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific\n        // substitution.\n        // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.\n        exceedsSize2: '%{backwardsCompat} %{size}',\n        exceedsSize: 'This file exceeds maximum allowed size of',\n        inferiorSize: 'This file is smaller than the allowed size of %{size}',\n        youCanOnlyUploadFileTypes: 'You can only upload: %{types}',\n        noNewAlreadyUploading: 'Cannot add new files: already uploading',\n        noDuplicates: 'Cannot add the duplicate file \\'%{fileName}\\', it already exists',\n        companionError: 'Connection with Companion failed',\n        companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',\n        failedToUpload: 'Failed to upload %{file}',\n        noInternetConnection: 'No Internet connection',\n        connectedToInternet: 'Connected to the Internet',\n        // Strings for remote providers\n        noFilesFound: 'You have no files or folders here',\n        selectX: {\n          0: 'Select %{smart_count}',\n          1: 'Select %{smart_count}',\n        },\n        selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',\n        unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',\n        selectFileNamed: 'Select file %{name}',\n        unselectFileNamed: 'Unselect file %{name}',\n        openFolderNamed: 'Open folder %{name}',\n        cancel: 'Cancel',\n        logOut: 'Log out',\n        filter: 'Filter',\n        resetFilter: 'Reset filter',\n        loading: 'Loading...',\n        authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',\n        authenticateWith: 'Connect to %{pluginName}',\n        searchImages: 'Search for images',\n        enterTextToSearch: 'Enter text to search for images',\n        backToSearch: 'Back to Search',\n        emptyFolderAdded: 'No files were added from empty folder',\n        folderAdded: {\n          0: 'Added %{smart_count} file from %{folder}',\n          1: 'Added %{smart_count} files from %{folder}',\n        },\n      },\n    }\n\n    const defaultOptions = {\n      id: 'uppy',\n      autoProceed: false,\n      allowMultipleUploads: true,\n      debug: false,\n      restrictions: {\n        maxFileSize: null,\n        minFileSize: null,\n        maxTotalFileSize: null,\n        maxNumberOfFiles: null,\n        minNumberOfFiles: null,\n        allowedFileTypes: null,\n      },\n      meta: {},\n      onBeforeFileAdded: (currentFile, files) => currentFile,\n      onBeforeUpload: (files) => files,\n      store: DefaultStore(),\n      logger: justErrorsLogger,\n      infoTimeout: 5000,\n    }\n\n    // Merge default options with the ones set by user,\n    // making sure to merge restrictions too\n    this.opts = {\n      ...defaultOptions,\n      ...opts,\n      restrictions: {\n        ...defaultOptions.restrictions,\n        ...(opts && opts.restrictions),\n      },\n    }\n\n    // Support debug: true for backwards-compatability, unless logger is set in opts\n    // opts instead of this.opts to avoid comparing objects — we set logger: justErrorsLogger in defaultOptions\n    if (opts && opts.logger && opts.debug) {\n      this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning')\n    } else if (opts && opts.debug) {\n      this.opts.logger = debugLogger\n    }\n\n    this.log(`Using Core v${this.constructor.VERSION}`)\n\n    if (this.opts.restrictions.allowedFileTypes\n        && this.opts.restrictions.allowedFileTypes !== null\n        && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {\n      throw new TypeError('`restrictions.allowedFileTypes` must be an array')\n    }\n\n    this.i18nInit()\n\n    // Container for different types of plugins\n    this.plugins = {}\n\n    this.getState = this.getState.bind(this)\n    this.getPlugin = this.getPlugin.bind(this)\n    this.setFileMeta = this.setFileMeta.bind(this)\n    this.setFileState = this.setFileState.bind(this)\n    this.log = this.log.bind(this)\n    this.info = this.info.bind(this)\n    this.hideInfo = this.hideInfo.bind(this)\n    this.addFile = this.addFile.bind(this)\n    this.removeFile = this.removeFile.bind(this)\n    this.pauseResume = this.pauseResume.bind(this)\n    this.validateRestrictions = this.validateRestrictions.bind(this)\n\n    // ___Why throttle at 500ms?\n    //    - We must throttle at >250ms for superfocus in Dashboard to work well (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).\n    //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file, and click 'ADD MORE FILES', - focus won't activate in Firefox.\n    //    - We must throttle at around >500ms to avoid performance lags.\n    //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.\n    this._calculateProgress = throttle(this._calculateProgress.bind(this), 500, { leading: true, trailing: true })\n\n    this.updateOnlineStatus = this.updateOnlineStatus.bind(this)\n    this.resetProgress = this.resetProgress.bind(this)\n\n    this.pauseAll = this.pauseAll.bind(this)\n    this.resumeAll = this.resumeAll.bind(this)\n    this.retryAll = this.retryAll.bind(this)\n    this.cancelAll = this.cancelAll.bind(this)\n    this.retryUpload = this.retryUpload.bind(this)\n    this.upload = this.upload.bind(this)\n\n    this.emitter = ee()\n    this.on = this.on.bind(this)\n    this.off = this.off.bind(this)\n    this.once = this.emitter.once.bind(this.emitter)\n    this.emit = this.emitter.emit.bind(this.emitter)\n\n    this.preProcessors = []\n    this.uploaders = []\n    this.postProcessors = []\n\n    this.store = this.opts.store\n    this.setState({\n      plugins: {},\n      files: {},\n      currentUploads: {},\n      allowNewUpload: true,\n      capabilities: {\n        uploadProgress: supportsUploadProgress(),\n        individualCancellation: true,\n        resumableUploads: false,\n      },\n      totalProgress: 0,\n      meta: { ...this.opts.meta },\n      info: {\n        isHidden: true,\n        type: 'info',\n        message: '',\n      },\n      recoveredState: null,\n    })\n\n    this._storeUnsubscribe = this.store.subscribe((prevState, nextState, patch) => {\n      this.emit('state-update', prevState, nextState, patch)\n      this.updateAll(nextState)\n    })\n\n    // Exposing uppy object on window for debugging and testing\n    if (this.opts.debug && typeof window !== 'undefined') {\n      window[this.opts.id] = this\n    }\n\n    this._addListeners()\n\n    // Re-enable if we’ll need some capabilities on boot, like isMobileDevice\n    // this._setCapabilities()\n  }\n\n  // _setCapabilities = () => {\n  //   const capabilities = {\n  //     isMobileDevice: isMobileDevice()\n  //   }\n\n  //   this.setState({\n  //     ...this.getState().capabilities,\n  //     capabilities\n  //   })\n  // }\n\n  on (event, callback) {\n    this.emitter.on(event, callback)\n    return this\n  }\n\n  off (event, callback) {\n    this.emitter.off(event, callback)\n    return this\n  }\n\n  /**\n   * Iterate on all plugins and run `update` on them.\n   * Called each time state changes.\n   *\n   */\n  updateAll (state) {\n    this.iteratePlugins(plugin => {\n      plugin.update(state)\n    })\n  }\n\n  /**\n   * Updates state with a patch\n   *\n   * @param {object} patch {foo: 'bar'}\n   */\n  setState (patch) {\n    this.store.setState(patch)\n  }\n\n  /**\n   * Returns current state.\n   *\n   * @returns {object}\n   */\n  getState () {\n    return this.store.getState()\n  }\n\n  /**\n   * Back compat for when uppy.state is used instead of uppy.getState().\n   */\n  get state () {\n    return this.getState()\n  }\n\n  /**\n   * Shorthand to set state for a specific file.\n   */\n  setFileState (fileID, state) {\n    if (!this.getState().files[fileID]) {\n      throw new Error(`Can’t set state for ${fileID} (the file could have been removed)`)\n    }\n\n    this.setState({\n      files: { ...this.getState().files, [fileID]: { ...this.getState().files[fileID], ...state } },\n    })\n  }\n\n  i18nInit () {\n    this.translator = new Translator([this.defaultLocale, this.opts.locale])\n    this.locale = this.translator.locale\n    this.i18n = this.translator.translate.bind(this.translator)\n    this.i18nArray = this.translator.translateArray.bind(this.translator)\n  }\n\n  setOptions (newOpts) {\n    this.opts = {\n      ...this.opts,\n      ...newOpts,\n      restrictions: {\n        ...this.opts.restrictions,\n        ...(newOpts && newOpts.restrictions),\n      },\n    }\n\n    if (newOpts.meta) {\n      this.setMeta(newOpts.meta)\n    }\n\n    this.i18nInit()\n\n    if (newOpts.locale) {\n      this.iteratePlugins((plugin) => {\n        plugin.setOptions()\n      })\n    }\n\n    this.setState() // so that UI re-renders with new options\n  }\n\n  resetProgress () {\n    const defaultProgress = {\n      percentage: 0,\n      bytesUploaded: 0,\n      uploadComplete: false,\n      uploadStarted: null,\n    }\n    const files = { ...this.getState().files }\n    const updatedFiles = {}\n    Object.keys(files).forEach(fileID => {\n      const updatedFile = { ...files[fileID] }\n      updatedFile.progress = { ...updatedFile.progress, ...defaultProgress }\n      updatedFiles[fileID] = updatedFile\n    })\n\n    this.setState({\n      files: updatedFiles,\n      totalProgress: 0,\n    })\n\n    this.emit('reset-progress')\n  }\n\n  addPreProcessor (fn) {\n    this.preProcessors.push(fn)\n  }\n\n  removePreProcessor (fn) {\n    const i = this.preProcessors.indexOf(fn)\n    if (i !== -1) {\n      this.preProcessors.splice(i, 1)\n    }\n  }\n\n  addPostProcessor (fn) {\n    this.postProcessors.push(fn)\n  }\n\n  removePostProcessor (fn) {\n    const i = this.postProcessors.indexOf(fn)\n    if (i !== -1) {\n      this.postProcessors.splice(i, 1)\n    }\n  }\n\n  addUploader (fn) {\n    this.uploaders.push(fn)\n  }\n\n  removeUploader (fn) {\n    const i = this.uploaders.indexOf(fn)\n    if (i !== -1) {\n      this.uploaders.splice(i, 1)\n    }\n  }\n\n  setMeta (data) {\n    const updatedMeta = { ...this.getState().meta, ...data }\n    const updatedFiles = { ...this.getState().files }\n\n    Object.keys(updatedFiles).forEach((fileID) => {\n      updatedFiles[fileID] = { ...updatedFiles[fileID], meta: { ...updatedFiles[fileID].meta, ...data } }\n    })\n\n    this.log('Adding metadata:')\n    this.log(data)\n\n    this.setState({\n      meta: updatedMeta,\n      files: updatedFiles,\n    })\n  }\n\n  setFileMeta (fileID, data) {\n    const updatedFiles = { ...this.getState().files }\n    if (!updatedFiles[fileID]) {\n      this.log('Was trying to set metadata for a file that has been removed: ', fileID)\n      return\n    }\n    const newMeta = { ...updatedFiles[fileID].meta, ...data }\n    updatedFiles[fileID] = { ...updatedFiles[fileID], meta: newMeta }\n    this.setState({ files: updatedFiles })\n  }\n\n  /**\n   * Get a file object.\n   *\n   * @param {string} fileID The ID of the file object to return.\n   */\n  getFile (fileID) {\n    return this.getState().files[fileID]\n  }\n\n  /**\n   * Get all files in an array.\n   */\n  getFiles () {\n    const { files } = this.getState()\n    return Object.keys(files).map((fileID) => files[fileID])\n  }\n\n  /**\n   * A public wrapper for _checkRestrictions — checks if a file passes a set of restrictions.\n   * For use in UI pluigins (like Providers), to disallow selecting files that won’t pass restrictions.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @returns {object} { result: true/false, reason: why file didn’t pass restrictions }\n   */\n  validateRestrictions (file, files) {\n    try {\n      this._checkRestrictions(file, files)\n      return {\n        result: true,\n      }\n    } catch (err) {\n      return {\n        result: false,\n        reason: err.message,\n      }\n    }\n  }\n\n  /**\n   * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,\n   * maxNumberOfFiles and allowedFileTypes.\n   *\n   * @param {object} file object to check\n   * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize\n   * @private\n   */\n  _checkRestrictions (file, files = this.getFiles()) {\n    const { maxFileSize, minFileSize, maxTotalFileSize, maxNumberOfFiles, allowedFileTypes } = this.opts.restrictions\n\n    if (maxNumberOfFiles) {\n      if (files.length + 1 > maxNumberOfFiles) {\n        throw new RestrictionError(`${this.i18n('youCanOnlyUploadX', { smart_count: maxNumberOfFiles })}`)\n      }\n    }\n\n    if (allowedFileTypes) {\n      const isCorrectFileType = allowedFileTypes.some((type) => {\n        // check if this is a mime-type\n        if (type.indexOf('/') > -1) {\n          if (!file.type) return false\n          return match(file.type.replace(/;.*?$/, ''), type)\n        }\n\n        // otherwise this is likely an extension\n        if (type[0] === '.' && file.extension) {\n          return file.extension.toLowerCase() === type.substr(1).toLowerCase()\n        }\n        return false\n      })\n\n      if (!isCorrectFileType) {\n        const allowedFileTypesString = allowedFileTypes.join(', ')\n        throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', { types: allowedFileTypesString }))\n      }\n    }\n\n    // We can't check maxTotalFileSize if the size is unknown.\n    if (maxTotalFileSize && file.size != null) {\n      let totalFilesSize = 0\n      totalFilesSize += file.size\n      files.forEach((file) => {\n        totalFilesSize += file.size\n      })\n      if (totalFilesSize > maxTotalFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxTotalFileSize),\n        }))\n      }\n    }\n\n    // We can't check maxFileSize if the size is unknown.\n    if (maxFileSize && file.size != null) {\n      if (file.size > maxFileSize) {\n        throw new RestrictionError(this.i18n('exceedsSize2', {\n          backwardsCompat: this.i18n('exceedsSize'),\n          size: prettierBytes(maxFileSize),\n        }))\n      }\n    }\n\n    // We can't check minFileSize if the size is unknown.\n    if (minFileSize && file.size != null) {\n      if (file.size < minFileSize) {\n        throw new RestrictionError(this.i18n('inferiorSize', {\n          size: prettierBytes(minFileSize),\n        }))\n      }\n    }\n  }\n\n  /**\n   * Check if minNumberOfFiles restriction is reached before uploading.\n   *\n   * @private\n   */\n  _checkMinNumberOfFiles (files) {\n    const { minNumberOfFiles } = this.opts.restrictions\n    if (Object.keys(files).length < minNumberOfFiles) {\n      throw new RestrictionError(`${this.i18n('youHaveToAtLeastSelectX', { smart_count: minNumberOfFiles })}`)\n    }\n  }\n\n  /**\n   * Logs an error, sets Informer message, then throws the error.\n   * Emits a 'restriction-failed' event if it’s a restriction error\n   *\n   * @param {object | string} err — Error object or plain string message\n   * @param {object} [options]\n   * @param {boolean} [options.showInformer=true] — Sometimes developer might want to show Informer manually\n   * @param {object} [options.file=null] — File object used to emit the restriction error\n   * @param {boolean} [options.throwErr=true] — Errors shouldn’t be thrown, for example, in `upload-error` event\n   * @private\n   */\n  _showOrLogErrorAndThrow (err, { showInformer = true, file = null, throwErr = true } = {}) {\n    const message = typeof err === 'object' ? err.message : err\n    const details = (typeof err === 'object' && err.details) ? err.details : ''\n\n    // Restriction errors should be logged, but not as errors,\n    // as they are expected and shown in the UI.\n    let logMessageWithDetails = message\n    if (details) {\n      logMessageWithDetails += ` ${details}`\n    }\n    if (err.isRestriction) {\n      this.log(logMessageWithDetails)\n      this.emit('restriction-failed', file, err)\n    } else {\n      this.log(logMessageWithDetails, 'error')\n    }\n\n    // Sometimes informer has to be shown manually by the developer,\n    // for example, in `onBeforeFileAdded`.\n    if (showInformer) {\n      this.info({ message, details }, 'error', this.opts.infoTimeout)\n    }\n\n    if (throwErr) {\n      throw (typeof err === 'object' ? err : new Error(err))\n    }\n  }\n\n  _assertNewUploadAllowed (file) {\n    const { allowNewUpload } = this.getState()\n\n    if (allowNewUpload === false) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), { file })\n    }\n  }\n\n  /**\n   * Create a file state object based on user-provided `addFile()` options.\n   *\n   * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!\n   *\n   * The `files` value is passed in because it may be updated by the caller without updating the store.\n   */\n  _checkAndCreateFileStateObject (files, file) {\n    const fileType = getFileType(file)\n    file.type = fileType\n\n    const onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files)\n\n    if (onBeforeFileAddedResult === false) {\n      // Don’t show UI info for this error, as it should be done by the developer\n      this._showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), { showInformer: false, file })\n    }\n\n    if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {\n      file = onBeforeFileAddedResult\n    }\n\n    let fileName\n    if (file.name) {\n      fileName = file.name\n    } else if (fileType.split('/')[0] === 'image') {\n      fileName = `${fileType.split('/')[0]}.${fileType.split('/')[1]}`\n    } else {\n      fileName = 'noname'\n    }\n    const fileExtension = getFileNameAndExtension(fileName).extension\n    const isRemote = file.isRemote || false\n\n    const fileID = generateFileID(file)\n\n    if (files[fileID] && !files[fileID].isGhost) {\n      this._showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', { fileName })), { file })\n    }\n\n    const meta = file.meta || {}\n    meta.name = fileName\n    meta.type = fileType\n\n    // `null` means the size is unknown.\n    const size = isFinite(file.data.size) ? file.data.size : null\n    const newFile = {\n      source: file.source || '',\n      id: fileID,\n      name: fileName,\n      extension: fileExtension || '',\n      meta: {\n        ...this.getState().meta,\n        ...meta,\n      },\n      type: fileType,\n      data: file.data,\n      progress: {\n        percentage: 0,\n        bytesUploaded: 0,\n        bytesTotal: size,\n        uploadComplete: false,\n        uploadStarted: null,\n      },\n      size,\n      isRemote,\n      remote: file.remote || '',\n      preview: file.preview,\n    }\n\n    try {\n      const filesArray = Object.keys(files).map(i => files[i])\n      this._checkRestrictions(newFile, filesArray)\n    } catch (err) {\n      this._showOrLogErrorAndThrow(err, { file: newFile })\n    }\n\n    return newFile\n  }\n\n  // Schedule an upload if `autoProceed` is enabled.\n  _startIfAutoProceed () {\n    if (this.opts.autoProceed && !this.scheduledAutoProceed) {\n      this.scheduledAutoProceed = setTimeout(() => {\n        this.scheduledAutoProceed = null\n        this.upload().catch((err) => {\n          if (!err.isRestriction) {\n            this.log(err.stack || err.message || err)\n          }\n        })\n      }, 4)\n    }\n  }\n\n  /**\n   * Add a new file to `state.files`. This will run `onBeforeFileAdded`,\n   * try to guess file type in a clever way, check file against restrictions,\n   * and start an upload if `autoProceed === true`.\n   *\n   * @param {object} file object to add\n   * @returns {string} id for the added file\n   */\n  addFile (file) {\n    this._assertNewUploadAllowed(file)\n\n    const { files } = this.getState()\n    let newFile = this._checkAndCreateFileStateObject(files, file)\n\n    // Users are asked to re-select recovered files without data,\n    // and to keep the progress, meta and everthing else, we only replace said data\n    if (files[newFile.id] && files[newFile.id].isGhost) {\n      newFile = {\n        ...files[newFile.id],\n        data: file.data,\n        isGhost: false,\n      }\n      this.log(`Replaced the blob in the restored ghost file: ${newFile.name}, ${newFile.id}`)\n    }\n\n    this.setState({\n      files: {\n        ...files,\n        [newFile.id]: newFile,\n      },\n    })\n\n    this.emit('file-added', newFile)\n    this.emit('files-added', [newFile])\n    this.log(`Added file: ${newFile.name}, ${newFile.id}, mime type: ${newFile.type}`)\n\n    this._startIfAutoProceed()\n\n    return newFile.id\n  }\n\n  /**\n   * Add multiple files to `state.files`. See the `addFile()` documentation.\n   *\n   * If an error occurs while adding a file, it is logged and the user is notified.\n   * This is good for UI plugins, but not for programmatic use.\n   * Programmatic users should usually still use `addFile()` on individual files.\n   */\n  addFiles (fileDescriptors) {\n    this._assertNewUploadAllowed()\n\n    // create a copy of the files object only once\n    const files = { ...this.getState().files }\n    const newFiles = []\n    const errors = []\n    for (let i = 0; i < fileDescriptors.length; i++) {\n      try {\n        let newFile = this._checkAndCreateFileStateObject(files, fileDescriptors[i])\n        // Users are asked to re-select recovered files without data,\n        // and to keep the progress, meta and everthing else, we only replace said data\n        if (files[newFile.id] && files[newFile.id].isGhost) {\n          newFile = {\n            ...files[newFile.id],\n            data: fileDescriptors[i].data,\n            isGhost: false,\n          }\n          this.log(`Replaced blob in a ghost file: ${newFile.name}, ${newFile.id}`)\n        }\n        files[newFile.id] = newFile\n        newFiles.push(newFile)\n      } catch (err) {\n        if (!err.isRestriction) {\n          errors.push(err)\n        }\n      }\n    }\n\n    this.setState({ files })\n\n    newFiles.forEach((newFile) => {\n      this.emit('file-added', newFile)\n    })\n\n    this.emit('files-added', newFiles)\n\n    if (newFiles.length > 5) {\n      this.log(`Added batch of ${newFiles.length} files`)\n    } else {\n      Object.keys(newFiles).forEach(fileID => {\n        this.log(`Added file: ${newFiles[fileID].name}\\n id: ${newFiles[fileID].id}\\n type: ${newFiles[fileID].type}`)\n      })\n    }\n\n    if (newFiles.length > 0) {\n      this._startIfAutoProceed()\n    }\n\n    if (errors.length > 0) {\n      let message = 'Multiple errors occurred while adding files:\\n'\n      errors.forEach((subError) => {\n        message += `\\n * ${subError.message}`\n      })\n\n      this.info({\n        message: this.i18n('addBulkFilesFailed', { smart_count: errors.length }),\n        details: message,\n      }, 'error', this.opts.infoTimeout)\n\n      if (typeof AggregateError === 'function') {\n        throw new AggregateError(errors, message)\n      } else {\n        const err = new Error(message)\n        err.errors = errors\n        throw err\n      }\n    }\n  }\n\n  removeFiles (fileIDs, reason) {\n    const { files, currentUploads } = this.getState()\n    const updatedFiles = { ...files }\n    const updatedUploads = { ...currentUploads }\n\n    const removedFiles = Object.create(null)\n    fileIDs.forEach((fileID) => {\n      if (files[fileID]) {\n        removedFiles[fileID] = files[fileID]\n        delete updatedFiles[fileID]\n      }\n    })\n\n    // Remove files from the `fileIDs` list in each upload.\n    function fileIsNotRemoved (uploadFileID) {\n      return removedFiles[uploadFileID] === undefined\n    }\n\n    Object.keys(updatedUploads).forEach((uploadID) => {\n      const newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved)\n\n      // Remove the upload if no files are associated with it anymore.\n      if (newFileIDs.length === 0) {\n        delete updatedUploads[uploadID]\n        return\n      }\n\n      updatedUploads[uploadID] = {\n        ...currentUploads[uploadID],\n        fileIDs: newFileIDs,\n      }\n    })\n\n    const stateUpdate = {\n      currentUploads: updatedUploads,\n      files: updatedFiles,\n    }\n\n    // If all files were removed - allow new uploads,\n    // and clear recoveredState\n    if (Object.keys(updatedFiles).length === 0) {\n      stateUpdate.allowNewUpload = true\n      stateUpdate.error = null\n      stateUpdate.recoveredState = null\n    }\n\n    this.setState(stateUpdate)\n    this._calculateTotalProgress()\n\n    const removedFileIDs = Object.keys(removedFiles)\n    removedFileIDs.forEach((fileID) => {\n      this.emit('file-removed', removedFiles[fileID], reason)\n    })\n\n    if (removedFileIDs.length > 5) {\n      this.log(`Removed ${removedFileIDs.length} files`)\n    } else {\n      this.log(`Removed files: ${removedFileIDs.join(', ')}`)\n    }\n  }\n\n  removeFile (fileID, reason = null) {\n    this.removeFiles([fileID], reason)\n  }\n\n  pauseResume (fileID) {\n    if (!this.getState().capabilities.resumableUploads\n         || this.getFile(fileID).uploadComplete) {\n      return\n    }\n\n    const wasPaused = this.getFile(fileID).isPaused || false\n    const isPaused = !wasPaused\n\n    this.setFileState(fileID, {\n      isPaused,\n    })\n\n    this.emit('upload-pause', fileID, isPaused)\n\n    return isPaused\n  }\n\n  pauseAll () {\n    const updatedFiles = { ...this.getState().files }\n    const inProgressUpdatedFiles = Object.keys(updatedFiles).filter((file) => {\n      return !updatedFiles[file].progress.uploadComplete\n             && updatedFiles[file].progress.uploadStarted\n    })\n\n    inProgressUpdatedFiles.forEach((file) => {\n      const updatedFile = { ...updatedFiles[file], isPaused: true }\n      updatedFiles[file] = updatedFile\n    })\n\n    this.setState({ files: updatedFiles })\n    this.emit('pause-all')\n  }\n\n  resumeAll () {\n    const updatedFiles = { ...this.getState().files }\n    const inProgressUpdatedFiles = Object.keys(updatedFiles).filter((file) => {\n      return !updatedFiles[file].progress.uploadComplete\n             && updatedFiles[file].progress.uploadStarted\n    })\n\n    inProgressUpdatedFiles.forEach((file) => {\n      const updatedFile = {\n        ...updatedFiles[file],\n        isPaused: false,\n        error: null,\n      }\n      updatedFiles[file] = updatedFile\n    })\n    this.setState({ files: updatedFiles })\n\n    this.emit('resume-all')\n  }\n\n  retryAll () {\n    const updatedFiles = { ...this.getState().files }\n    const filesToRetry = Object.keys(updatedFiles).filter(file => {\n      return updatedFiles[file].error\n    })\n\n    filesToRetry.forEach((file) => {\n      const updatedFile = {\n        ...updatedFiles[file],\n        isPaused: false,\n        error: null,\n      }\n      updatedFiles[file] = updatedFile\n    })\n    this.setState({\n      files: updatedFiles,\n      error: null,\n    })\n\n    this.emit('retry-all', filesToRetry)\n\n    if (filesToRetry.length === 0) {\n      return Promise.resolve({\n        successful: [],\n        failed: [],\n      })\n    }\n\n    const uploadID = this._createUpload(filesToRetry, {\n      forceAllowNewUpload: true, // create new upload even if allowNewUpload: false\n    })\n    return this._runUpload(uploadID)\n  }\n\n  cancelAll () {\n    this.emit('cancel-all')\n\n    const { files } = this.getState()\n\n    const fileIDs = Object.keys(files)\n    if (fileIDs.length) {\n      this.removeFiles(fileIDs, 'cancel-all')\n    }\n\n    this.setState({\n      totalProgress: 0,\n      error: null,\n      recoveredState: null,\n    })\n  }\n\n  retryUpload (fileID) {\n    this.setFileState(fileID, {\n      error: null,\n      isPaused: false,\n    })\n\n    this.emit('upload-retry', fileID)\n\n    const uploadID = this._createUpload([fileID], {\n      forceAllowNewUpload: true, // create new upload even if allowNewUpload: false\n    })\n    return this._runUpload(uploadID)\n  }\n\n  reset () {\n    this.cancelAll()\n  }\n\n  logout () {\n    this.iteratePlugins(plugin => {\n      if (plugin.provider && plugin.provider.logout) {\n        plugin.provider.logout()\n      }\n    })\n  }\n\n  _calculateProgress (file, data) {\n    if (!this.getFile(file.id)) {\n      this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n      return\n    }\n\n    // bytesTotal may be null or zero; in that case we can't divide by it\n    const canHavePercentage = isFinite(data.bytesTotal) && data.bytesTotal > 0\n    this.setFileState(file.id, {\n      progress: {\n        ...this.getFile(file.id).progress,\n        bytesUploaded: data.bytesUploaded,\n        bytesTotal: data.bytesTotal,\n        percentage: canHavePercentage\n          // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?\n          // we get more accurate calculations if we don't round this at all.\n          ? Math.round(data.bytesUploaded / data.bytesTotal * 100)\n          : 0,\n      },\n    })\n\n    this._calculateTotalProgress()\n  }\n\n  _calculateTotalProgress () {\n    // calculate total progress, using the number of files currently uploading,\n    // multiplied by 100 and the summ of individual progress of each file\n    const files = this.getFiles()\n\n    const inProgress = files.filter((file) => {\n      return file.progress.uploadStarted\n        || file.progress.preprocess\n        || file.progress.postprocess\n    })\n\n    if (inProgress.length === 0) {\n      this.emit('progress', 0)\n      this.setState({ totalProgress: 0 })\n      return\n    }\n\n    const sizedFiles = inProgress.filter((file) => file.progress.bytesTotal != null)\n    const unsizedFiles = inProgress.filter((file) => file.progress.bytesTotal == null)\n\n    if (sizedFiles.length === 0) {\n      const progressMax = inProgress.length * 100\n      const currentProgress = unsizedFiles.reduce((acc, file) => {\n        return acc + file.progress.percentage\n      }, 0)\n      const totalProgress = Math.round(currentProgress / progressMax * 100)\n      this.setState({ totalProgress })\n      return\n    }\n\n    let totalSize = sizedFiles.reduce((acc, file) => {\n      return acc + file.progress.bytesTotal\n    }, 0)\n    const averageSize = totalSize / sizedFiles.length\n    totalSize += averageSize * unsizedFiles.length\n\n    let uploadedSize = 0\n    sizedFiles.forEach((file) => {\n      uploadedSize += file.progress.bytesUploaded\n    })\n    unsizedFiles.forEach((file) => {\n      uploadedSize += averageSize * (file.progress.percentage || 0) / 100\n    })\n\n    let totalProgress = totalSize === 0\n      ? 0\n      : Math.round(uploadedSize / totalSize * 100)\n\n    // hot fix, because:\n    // uploadedSize ended up larger than totalSize, resulting in 1325% total\n    if (totalProgress > 100) {\n      totalProgress = 100\n    }\n\n    this.setState({ totalProgress })\n    this.emit('progress', totalProgress)\n  }\n\n  /**\n   * Registers listeners for all global actions, like:\n   * `error`, `file-removed`, `upload-progress`\n   */\n  _addListeners () {\n    this.on('error', (error) => {\n      let errorMsg = 'Unknown error'\n      if (error.message) {\n        errorMsg = error.message\n      }\n\n      if (error.details) {\n        errorMsg += ` ${error.details}`\n      }\n\n      this.setState({ error: errorMsg })\n    })\n\n    this.on('upload-error', (file, error, response) => {\n      let errorMsg = 'Unknown error'\n      if (error.message) {\n        errorMsg = error.message\n      }\n\n      if (error.details) {\n        errorMsg += ` ${error.details}`\n      }\n\n      this.setFileState(file.id, {\n        error: errorMsg,\n        response,\n      })\n\n      this.setState({ error: error.message })\n\n      if (typeof error === 'object' && error.message) {\n        const newError = new Error(error.message)\n        newError.details = error.message\n        if (error.details) {\n          newError.details += ` ${error.details}`\n        }\n        newError.message = this.i18n('failedToUpload', { file: file.name })\n        this._showOrLogErrorAndThrow(newError, {\n          throwErr: false,\n        })\n      } else {\n        this._showOrLogErrorAndThrow(error, {\n          throwErr: false,\n        })\n      }\n    })\n\n    this.on('upload', () => {\n      this.setState({ error: null })\n    })\n\n    this.on('upload-started', (file, upload) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n      this.setFileState(file.id, {\n        progress: {\n          uploadStarted: Date.now(),\n          uploadComplete: false,\n          percentage: 0,\n          bytesUploaded: 0,\n          bytesTotal: file.size,\n        },\n      })\n    })\n\n    this.on('upload-progress', this._calculateProgress)\n\n    this.on('upload-success', (file, uploadResp) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n\n      const currentProgress = this.getFile(file.id).progress\n      this.setFileState(file.id, {\n        progress: {\n          ...currentProgress,\n          postprocess: this.postProcessors.length > 0 ? {\n            mode: 'indeterminate',\n          } : null,\n          uploadComplete: true,\n          percentage: 100,\n          bytesUploaded: currentProgress.bytesTotal,\n        },\n        response: uploadResp,\n        uploadURL: uploadResp.uploadURL,\n        isPaused: false,\n      })\n\n      this._calculateTotalProgress()\n    })\n\n    this.on('preprocess-progress', (file, progress) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n      this.setFileState(file.id, {\n        progress: { ...this.getFile(file.id).progress, preprocess: progress },\n      })\n    })\n\n    this.on('preprocess-complete', (file) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n      const files = { ...this.getState().files }\n      files[file.id] = { ...files[file.id], progress: { ...files[file.id].progress } }\n      delete files[file.id].progress.preprocess\n\n      this.setState({ files })\n    })\n\n    this.on('postprocess-progress', (file, progress) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n      this.setFileState(file.id, {\n        progress: { ...this.getState().files[file.id].progress, postprocess: progress },\n      })\n    })\n\n    this.on('postprocess-complete', (file) => {\n      if (!this.getFile(file.id)) {\n        this.log(`Not setting progress for a file that has been removed: ${file.id}`)\n        return\n      }\n      const files = {\n        ...this.getState().files,\n      }\n      files[file.id] = {\n        ...files[file.id],\n        progress: {\n          ...files[file.id].progress,\n        },\n      }\n      delete files[file.id].progress.postprocess\n      // TODO should we set some kind of `fullyComplete` property on the file object\n      // so it's easier to see that the file is upload…fully complete…rather than\n      // what we have to do now (`uploadComplete && !postprocess`)\n\n      this.setState({ files })\n    })\n\n    this.on('restored', () => {\n      // Files may have changed--ensure progress is still accurate.\n      this._calculateTotalProgress()\n    })\n\n    // show informer if offline\n    if (typeof window !== 'undefined' && window.addEventListener) {\n      window.addEventListener('online', () => this.updateOnlineStatus())\n      window.addEventListener('offline', () => this.updateOnlineStatus())\n      setTimeout(() => this.updateOnlineStatus(), 3000)\n    }\n  }\n\n  updateOnlineStatus () {\n    const online\n      = typeof window.navigator.onLine !== 'undefined'\n        ? window.navigator.onLine\n        : true\n    if (!online) {\n      this.emit('is-offline')\n      this.info(this.i18n('noInternetConnection'), 'error', 0)\n      this.wasOffline = true\n    } else {\n      this.emit('is-online')\n      if (this.wasOffline) {\n        this.emit('back-online')\n        this.info(this.i18n('connectedToInternet'), 'success', 3000)\n        this.wasOffline = false\n      }\n    }\n  }\n\n  getID () {\n    return this.opts.id\n  }\n\n  /**\n   * Registers a plugin with Core.\n   *\n   * @param {object} Plugin object\n   * @param {object} [opts] object with options to be passed to Plugin\n   * @returns {object} self for chaining\n   */\n  use (Plugin, opts) {\n    if (typeof Plugin !== 'function') {\n      const msg = `Expected a plugin class, but got ${Plugin === null ? 'null' : typeof Plugin}.`\n        + ' Please verify that the plugin was imported and spelled correctly.'\n      throw new TypeError(msg)\n    }\n\n    // Instantiate\n    const plugin = new Plugin(this, opts)\n    const pluginId = plugin.id\n    this.plugins[plugin.type] = this.plugins[plugin.type] || []\n\n    if (!pluginId) {\n      throw new Error('Your plugin must have an id')\n    }\n\n    if (!plugin.type) {\n      throw new Error('Your plugin must have a type')\n    }\n\n    const existsPluginAlready = this.getPlugin(pluginId)\n    if (existsPluginAlready) {\n      const msg = `Already found a plugin named '${existsPluginAlready.id}'. `\n        + `Tried to use: '${pluginId}'.\\n`\n        + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.'\n      throw new Error(msg)\n    }\n\n    if (Plugin.VERSION) {\n      this.log(`Using ${pluginId} v${Plugin.VERSION}`)\n    }\n\n    this.plugins[plugin.type].push(plugin)\n    plugin.install()\n\n    return this\n  }\n\n  /**\n   * Find one Plugin by name.\n   *\n   * @param {string} id plugin id\n   * @returns {object|boolean}\n   */\n  getPlugin (id) {\n    let foundPlugin = null\n    this.iteratePlugins((plugin) => {\n      if (plugin.id === id) {\n        foundPlugin = plugin\n        return false\n      }\n    })\n    return foundPlugin\n  }\n\n  /**\n   * Iterate through all `use`d plugins.\n   *\n   * @param {Function} method that will be run on each plugin\n   */\n  iteratePlugins (method) {\n    Object.keys(this.plugins).forEach(pluginType => {\n      this.plugins[pluginType].forEach(method)\n    })\n  }\n\n  /**\n   * Uninstall and remove a plugin.\n   *\n   * @param {object} instance The plugin instance to remove.\n   */\n  removePlugin (instance) {\n    this.log(`Removing plugin ${instance.id}`)\n    this.emit('plugin-remove', instance)\n\n    if (instance.uninstall) {\n      instance.uninstall()\n    }\n\n    const list = this.plugins[instance.type].slice()\n    // list.indexOf failed here, because Vue3 converted the plugin instance\n    // to a Proxy object, which failed the strict comparison test:\n    // obj !== objProxy\n    const index = findIndex(list, item => item.id === instance.id)\n    if (index !== -1) {\n      list.splice(index, 1)\n      this.plugins[instance.type] = list\n    }\n\n    const state = this.getState()\n    const updatedState = {\n      plugins: {\n        ...state.plugins,\n        [instance.id]: undefined,\n      },\n    }\n    this.setState(updatedState)\n  }\n\n  /**\n   * Uninstall all plugins and close down this Uppy instance.\n   */\n  close () {\n    this.log(`Closing Uppy instance ${this.opts.id}: removing all files and uninstalling plugins`)\n\n    this.reset()\n\n    this._storeUnsubscribe()\n\n    this.iteratePlugins((plugin) => {\n      this.removePlugin(plugin)\n    })\n  }\n\n  /**\n   * Set info message in `state.info`, so that UI plugins like `Informer`\n   * can display the message.\n   *\n   * @param {string | object} message Message to be displayed by the informer\n   * @param {string} [type]\n   * @param {number} [duration]\n   */\n\n  info (message, type = 'info', duration = 3000) {\n    const isComplexMessage = typeof message === 'object'\n\n    this.setState({\n      info: {\n        isHidden: false,\n        type,\n        message: isComplexMessage ? message.message : message,\n        details: isComplexMessage ? message.details : null,\n      },\n    })\n\n    this.emit('info-visible')\n\n    clearTimeout(this.infoTimeoutID)\n    if (duration === 0) {\n      this.infoTimeoutID = undefined\n      return\n    }\n\n    // hide the informer after `duration` milliseconds\n    this.infoTimeoutID = setTimeout(this.hideInfo, duration)\n  }\n\n  hideInfo () {\n    const newInfo = { ...this.getState().info, isHidden: true }\n    this.setState({\n      info: newInfo,\n    })\n    this.emit('info-hidden')\n  }\n\n  /**\n   * Passes messages to a function, provided in `opts.logger`.\n   * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.\n   *\n   * @param {string|object} message to log\n   * @param {string} [type] optional `error` or `warning`\n   */\n  log (message, type) {\n    const { logger } = this.opts\n    switch (type) {\n      case 'error': logger.error(message); break\n      case 'warning': logger.warn(message); break\n      default: logger.debug(message); break\n    }\n  }\n\n  /**\n   * Obsolete, event listeners are now added in the constructor.\n   */\n  run () {\n    this.log('Calling run() is no longer necessary.', 'warning')\n    return this\n  }\n\n  /**\n   * Restore an upload by its ID.\n   */\n  restore (uploadID) {\n    this.log(`Core: attempting to restore upload \"${uploadID}\"`)\n\n    if (!this.getState().currentUploads[uploadID]) {\n      this._removeUpload(uploadID)\n      return Promise.reject(new Error('Nonexistent upload'))\n    }\n\n    return this._runUpload(uploadID)\n  }\n\n  /**\n   * Create an upload for a bunch of files.\n   *\n   * @param {Array<string>} fileIDs File IDs to include in this upload.\n   * @returns {string} ID of this upload.\n   */\n  _createUpload (fileIDs, opts = {}) {\n    const {\n      forceAllowNewUpload = false, // uppy.retryAll sets this to true — when retrying we want to ignore `allowNewUpload: false`\n    } = opts\n\n    const { allowNewUpload, currentUploads } = this.getState()\n    if (!allowNewUpload && !forceAllowNewUpload) {\n      throw new Error('Cannot create a new upload: already uploading.')\n    }\n\n    const uploadID = cuid()\n\n    this.emit('upload', {\n      id: uploadID,\n      fileIDs,\n    })\n\n    this.setState({\n      allowNewUpload: this.opts.allowMultipleUploads !== false,\n\n      currentUploads: {\n        ...currentUploads,\n        [uploadID]: {\n          fileIDs,\n          step: 0,\n          result: {},\n        },\n      },\n    })\n\n    return uploadID\n  }\n\n  _getUpload (uploadID) {\n    const { currentUploads } = this.getState()\n\n    return currentUploads[uploadID]\n  }\n\n  /**\n   * Add data to an upload's result object.\n   *\n   * @param {string} uploadID The ID of the upload.\n   * @param {object} data Data properties to add to the result object.\n   */\n  addResultData (uploadID, data) {\n    if (!this._getUpload(uploadID)) {\n      this.log(`Not setting result for an upload that has been removed: ${uploadID}`)\n      return\n    }\n    const currentUploads = this.getState().currentUploads\n    const currentUpload = { ...currentUploads[uploadID], result: { ...currentUploads[uploadID].result, ...data } }\n    this.setState({\n      currentUploads: { ...currentUploads, [uploadID]: currentUpload },\n    })\n  }\n\n  /**\n   * Remove an upload, eg. if it has been canceled or completed.\n   *\n   * @param {string} uploadID The ID of the upload.\n   */\n  _removeUpload (uploadID) {\n    const currentUploads = { ...this.getState().currentUploads }\n    delete currentUploads[uploadID]\n\n    this.setState({\n      currentUploads,\n    })\n  }\n\n  /**\n   * Run an upload. This picks up where it left off in case the upload is being restored.\n   *\n   * @private\n   */\n  _runUpload (uploadID) {\n    const uploadData = this.getState().currentUploads[uploadID]\n    const restoreStep = uploadData.step\n\n    const steps = [\n      ...this.preProcessors,\n      ...this.uploaders,\n      ...this.postProcessors,\n    ]\n    let lastStep = Promise.resolve()\n    steps.forEach((fn, step) => {\n      // Skip this step if we are restoring and have already completed this step before.\n      if (step < restoreStep) {\n        return\n      }\n\n      lastStep = lastStep.then(() => {\n        const { currentUploads } = this.getState()\n        const currentUpload = currentUploads[uploadID]\n        if (!currentUpload) {\n          return\n        }\n\n        const updatedUpload = {\n          ...currentUpload,\n          step,\n        }\n\n        this.setState({\n          currentUploads: {\n            ...currentUploads,\n            [uploadID]: updatedUpload,\n          },\n        })\n\n        // TODO give this the `updatedUpload` object as its only parameter maybe?\n        // Otherwise when more metadata may be added to the upload this would keep getting more parameters\n        return fn(updatedUpload.fileIDs, uploadID)\n      }).then((result) => {\n        return null\n      })\n    })\n\n    // Not returning the `catch`ed promise, because we still want to return a rejected\n    // promise from this method if the upload failed.\n    lastStep.catch((err) => {\n      this.emit('error', err, uploadID)\n      this._removeUpload(uploadID)\n    })\n\n    return lastStep.then(() => {\n      // Set result data.\n      const { currentUploads } = this.getState()\n      const currentUpload = currentUploads[uploadID]\n      if (!currentUpload) {\n        return\n      }\n\n      // Mark postprocessing step as complete if necessary; this addresses a case where we might get\n      // stuck in the postprocessing UI while the upload is fully complete.\n      // If the postprocessing steps do not do any work, they may not emit postprocessing events at\n      // all, and never mark the postprocessing as complete. This is fine on its own but we\n      // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress\n      // state if any postprocessors are registered. That is to avoid a \"flash of completed state\"\n      // before the postprocessing plugins can emit events.\n      //\n      // So, just in case an upload with postprocessing plugins *has* completed *without* emitting\n      // postprocessing completion, we do it instead.\n      currentUpload.fileIDs.forEach((fileID) => {\n        const file = this.getFile(fileID)\n        if (file && file.progress.postprocess) {\n          this.emit('postprocess-complete', file)\n        }\n      })\n\n      const files = currentUpload.fileIDs.map((fileID) => this.getFile(fileID))\n      const successful = files.filter((file) => !file.error)\n      const failed = files.filter((file) => file.error)\n      this.addResultData(uploadID, { successful, failed, uploadID })\n    }).then(() => {\n      // Emit completion events.\n      // This is in a separate function so that the `currentUploads` variable\n      // always refers to the latest state. In the handler right above it refers\n      // to an outdated object without the `.result` property.\n      const { currentUploads } = this.getState()\n      if (!currentUploads[uploadID]) {\n        return\n      }\n      const currentUpload = currentUploads[uploadID]\n      const result = currentUpload.result\n      this.emit('complete', result)\n\n      this._removeUpload(uploadID)\n\n      return result\n    }).then((result) => {\n      if (result == null) {\n        this.log(`Not setting result for an upload that has been removed: ${uploadID}`)\n      }\n      return result\n    })\n  }\n\n  /**\n   * Start an upload for all the files that are not currently being uploaded.\n   *\n   * @returns {Promise}\n   */\n  upload () {\n    if (!this.plugins.uploader) {\n      this.log('No uploader type plugins are used', 'warning')\n    }\n\n    let files = this.getState().files\n\n    const onBeforeUploadResult = this.opts.onBeforeUpload(files)\n\n    if (onBeforeUploadResult === false) {\n      return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'))\n    }\n\n    if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {\n      files = onBeforeUploadResult\n      // Updating files in state, because uploader plugins receive file IDs,\n      // and then fetch the actual file object from state\n      this.setState({\n        files,\n      })\n    }\n\n    return Promise.resolve()\n      .then(() => this._checkMinNumberOfFiles(files))\n      .catch((err) => {\n        this._showOrLogErrorAndThrow(err)\n      })\n      .then(() => {\n        const { currentUploads } = this.getState()\n        // get a list of files that are currently assigned to uploads\n        const currentlyUploadingFiles = Object.keys(currentUploads).reduce((prev, curr) => prev.concat(currentUploads[curr].fileIDs), [])\n\n        const waitingFileIDs = []\n        Object.keys(files).forEach((fileID) => {\n          const file = this.getFile(fileID)\n          // if the file hasn't started uploading and hasn't already been assigned to an upload..\n          if ((!file.progress.uploadStarted) && (currentlyUploadingFiles.indexOf(fileID) === -1)) {\n            waitingFileIDs.push(file.id)\n          }\n        })\n\n        const uploadID = this._createUpload(waitingFileIDs)\n        return this._runUpload(uploadID)\n      })\n      .catch((err) => {\n        this._showOrLogErrorAndThrow(err, {\n          showInformer: false,\n        })\n      })\n  }\n}\n\nmodule.exports = function (opts) {\n  return new Uppy(opts)\n}\n\n// Expose class constructor.\nmodule.exports.Uppy = Uppy\nmodule.exports.Plugin = Plugin\nmodule.exports.debugLogger = debugLogger\n"]}